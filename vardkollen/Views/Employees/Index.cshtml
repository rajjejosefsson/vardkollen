@model vardkollen.ViewModels.EmployeeViewModel
@{
    ViewBag.Title = "Personal";
}


<link href="//cdn.datatables.net/1.10.12/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="//cdn.datatables.net/responsive/2.1.0/css/responsive.bootstrap.min.css" rel="stylesheet" />

<style>
    .panel-default {
        margin-top: 20px;
    }

       h3 {
       margin-top: 30px;
    }

    .Push {
        height: 150px;
    }

    @@media (min-width: 2560px) {
        .Push {
            height: 336px;
        }
    }
</style>



<div class="row">
    <div class="start-banner">
    </div>
</div>



<div class="row">

    <div class="col-md-12">


        <div class="col-md-4 form-holder">
            <h3>Lägg till anställd</h3>
            @using (Html.BeginForm("CreateEmployee", "Employees", "POST"))
            {
                @Html.AntiForgeryToken()


                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, "Förnamn")
                    @Html.TextBoxFor(model => model.FirstName, new {@class = "form-control", @id = "firstName"})
                    @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, "Efternamn")
                    @Html.TextBoxFor(model => model.LastName, new {@class = "form-control", @id = "lastName"})
                    @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PersonNumber, "Personnummer")
                    @Html.TextBoxFor(model => model.PersonNumber, new {@class = "form-control", @id = "personNumber"})
                    @Html.ValidationMessageFor(model => model.PersonNumber, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, "Telefonnummer")
                    @Html.TextBoxFor(model => model.PhoneNumber, new {@class = "form-control", @id = "phoneNumber"})
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Adress, "Adress")
                    @Html.TextBoxFor(model => model.Adress, new {@class = "form-control", @id = "adress"})
                    @Html.ValidationMessageFor(model => model.Adress, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ZipCode, "Postnummer")
                    @Html.TextBoxFor(model => model.ZipCode, new {@class = "form-control", @id = "zipCode"})
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new {@class = "text-danger"})
                </div>

                <div class="form-group">
                    @Html.HiddenFor(model => model.Id, new {@id = "hiddenId"})
                    <input type="submit" value="Lägg till" class="btn btn-primary create-save-btn"/>
                </div>
            }


        </div>



        <div class="col-md-8">
            <h1>Anställda</h1>
            <!-- Table -->
            <table id="myTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Förnamn</th>
                        <th>Efternamn</th>
                        <th>Personnummer</th>
                        <th>Telefonnummer</th>
                        <th>Adress</th>
                        <th>Postnummer</th>
                        <th>Edit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var employee in Model.Employees)
                    {
                        <tr class="tr-id">
                            <td>@employee.Id</td>
                            <td><p id="">@employee.FirstName</p></td>
                            <td><p id="">@employee.LastName</p></td>
                            <td><p id="">@employee.PersonNumber</p></td>
                            <td><p id="">@employee.PhoneNumber</p></td>
                            <td><p id="">@employee.Adress</p></td>
                            <td><p id="">@employee.ZipCode</p></td>
                            <td>
                                <button class="btn btn-primary editButton"
                                        data-id="@employee.Id"
                                        data-firstname="@employee.FirstName"
                                        data-lastname="@employee.LastName" data-firstName="@employee.FirstName"
                                        data-personnumber="@employee.PersonNumber"
                                        data-phonenumber="@employee.PhoneNumber"
                                        data-adress="@employee.Adress"
                                        data-zipcode="@employee.ZipCode">
                                    Edit
                                </button>
                                <button class="btn btn-danger deleteButton"
                                        data-id="@employee.Id">
                                    Delete
                                </button>
                            </td>

                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>



<div class="Push"></div>

@section scripts {

    <script type="text/javascript" src="//cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/responsive/2.1.0/js/dataTables.responsive.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/1.10.12/js/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/responsive/2.1.0/js/dataTables.responsive.min.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/responsive/2.1.0/js/responsive.bootstrap.min.js"></script>




    <script>
        $(document).ready(function () {

            var globalTable = $('#myTable').DataTable({
                responsive: true,
                "language": {
                    "lengthMenu": "Visar _MENU_ personer per sida",
                    "zeroRecords": "Vi hittade tyvärr inget",
                    "info": "Visar _PAGE_ av _PAGES_",
                    "infoEmpty": "Inga uppgifter tillgängliga",
                    "infoFiltered": "(filtered from _MAX_ total records)",
                    "search": "Sök",
                    "paginate": {
                        "first": "Första",
                        "last": "Sista",
                        "next": "Nästa",
                        "previous": "Föregående"
                    },
                    "processing": "Söker...",
                }
            });



            $("#myTable").on("click", ".editButton", function () {
                var employee = $(this).data();
                console.log(employee);
                $("#hiddenId").val(employee.id);
                $("#firstName").val(employee.firstname);
                $("#lastName").val(employee.lastname);
                $("#personNumber").val(employee.personnumber);
                $("#phoneNumber").val(employee.phonenumber);
                $("#adress").val(employee.adress);
                $("#zipCode").val(employee.zipcode);
                $(".create-save-btn").attr("value", "Save/Create");
            });


            $("#myTable").on("click", ".deleteButton", function () {
                var removeButton = $(this);



                var collapsedTr = removeButton.closest('tr');
                var partedTr = collapsedTr.prev('tr.parent');

                // Remove collapsed tr
                collapsedTr.remove();
                partedTr.remove();




                var employeeId = $(this).data('id');
                console.log(employeeId);
                console.log("DELETE IT");



                $.ajax({
                    type: "post",
                    url: "@Url.Action("DeleteEmployee", "Employees")",
                    ajaxasync: true,
                    data: { id: employeeId },

                    success: function () {
                        alert("success");

                    },
                    error: function (data) {
                        alert(data.x);
                    }
                });



            });

        });
    </script>
    }


    <!--



    e.preventDefault();

    $.ajax({
    type: "post",
    url: "@Url.Action("DeleteEmployee", "Employees")",
    ajaxasync: true,
    data: { id: employeeadId },

    success: function () {
    alert("success");

    },
    error: function (data) {
    alert(data.x);
    }
    });



    -->
