@model CareCheck.MVC.Admin.ViewModels.PatientViewModel
@{
    ViewBag.Title = "Personal";
}


<link href="//cdn.datatables.net/1.10.12/css/dataTables.bootstrap.min.css" rel="stylesheet"/>
<link href="//cdn.datatables.net/responsive/2.1.0/css/responsive.bootstrap.min.css" rel="stylesheet" />



<link href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />

<style>
    .panel-default {
        margin-top: 20px;
    }

    h3 {
       margin-top: 30px;
    }

      .Push{
        height: 150px;
    }

    @@media  (min-width: 2560px) {
    .Push {
        height:361px;
    }
}

</style>



<div class="row">
    <div class="start-banner">
    </div>
</div>


<div class="row">

    <div class="col-md-12">

        <div class="col-md-4">
            <h3>Lägg till ny patient</h3>
            @using (Html.BeginForm("CreatePatient", "Patient", "POST"))
            {
                @Html.AntiForgeryToken()


                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, "Förnamn")
                    @Html.TextBoxFor(model => model.FirstName, new {@class = "form-control", @id = "firstName"})
                    @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, "Efternamn")
                    @Html.TextBoxFor(model => model.LastName, new {@class = "form-control", @id = "lastName"})
                    @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PersonNumber, "Personnummer")
                    @Html.TextBoxFor(model => model.PersonNumber, new {@class = "form-control", @id = "personNumber"})
                    @Html.ValidationMessageFor(model => model.PersonNumber, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, "Telefonnummer")
                    @Html.TextBoxFor(model => model.PhoneNumber, new {@class = "form-control", @id = "phoneNumber"})
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Adress, "Adress")
                    @Html.TextBoxFor(model => model.Adress, new {@class = "form-control", @id = "adress"})
                    @Html.ValidationMessageFor(model => model.Adress, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ZipCode, "Postnummer")
                    @Html.TextBoxFor(model => model.ZipCode, new {@class = "form-control", @id = "zipCode"})
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new {@class = "text-danger"})
                </div>


                <div class="form-group">
                    @Html.HiddenFor(model => model.Id, new {@id = "hiddenId"})
                    <input type="submit" value="Lägg till" class="btn btn-primary create-save-btn" />
                </div>
            }
        </div>








        <div class="col-md-8">
            <h1>Patienter</h1>

            <!-- Table -->
            <table id="myTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Förnamn</th>
                        <th>Efternamn</th>
                        <th>Personnummer</th>
                        <th>Telefonnummer</th>
                        <th>Adress</th>
                        <th>Postnummer</th>
                        <th>Edit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var patient in Model.Patients)
                    {
                        <tr class="tr-id">
                            <td>@patient.Id</td>
                            <td><p id="">@patient.FirstName</p></td>
                            <td><p id="">@patient.LastName</p></td>
                            <td><p id="">@patient.PersonNumber</p></td>
                            <td><p id="">@patient.PhoneNumber</p></td>
                            <td><p id="">@patient.Adress</p></td>
                            <td><p id="">@patient.ZipCode</p></td>
                            <td>
                                <button class="btn btn-primary editButton"
                                        data-id="@patient.Id"
                                        data-firstname="@patient.FirstName"
                                        data-lastname="@patient.LastName" data-firstName="@patient.FirstName"
                                        data-personnumber="@patient.PersonNumber"
                                        data-phonenumber="@patient.PhoneNumber"
                                        data-adress="@patient.Adress"
                                        data-zipcode="@patient.ZipCode">
                                    Edit
                                </button>
                                <button class="btn btn-danger deleteButton"
                                        data-id="@patient.Id">
                                    Delete
                                </button>
                            </td>

                        </tr>
                    }

                </tbody>
            </table>
        </div>









    <!-- TABLE USING Jquery -->

    <!--
    <div class="col-md-8">
        <table id="patientTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
            <tr>
                <th>#</th>
                <th>Förnamn</th>
                <th>Efternamn</th>
                <th>Personnummer</th>
                <th>Telefonnummer</th>
                <th>Adress</th>
                <th>Postnummer</th>
                <th>Edit/Delete</th>
            </tr>
            </thead>
            <tbody>

            </tbody>
        </table>
    </div>
        -->
    </div>
</div>









<div class="Push"></div>

@section scripts {

    <script type="text/javascript" src="//cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/responsive/2.1.0/js/dataTables.responsive.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/1.10.12/js/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/responsive/2.1.0/js/dataTables.responsive.min.js"></script>
    <script type="text/javascript" src="//cdn.datatables.net/responsive/2.1.0/js/responsive.bootstrap.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

    <script>
        $(document)
            .ready(function() {


                $('#myTable').DataTable({
                        responsive: true,
                        "language": {
                            "lengthMenu": "Visar _MENU_ personer per sida",
                            "zeroRecords": "Vi hittade tyvärr inget",
                            "info": "Visar _PAGE_ av _PAGES_",
                            "infoEmpty": "Inga uppgifter tillgängliga",
                            "infoFiltered": "(filtered from _MAX_ total records)",
                            "search": "Sök",
                            "paginate": {
                                "first": "Första",
                                "last": "Sista",
                                "next": "Nästa",
                                "previous": "Föregående"
                            },
                            "processing": "Söker...",
                        }
                    });



                $("#myTable").on("click", ".editButton", function () {
                    var patient = $(this).data();
                    console.log(patient);
                    $("#hiddenId").val(patient.id);
                    $("#firstName").val(patient.firstname);
                    $("#lastName").val(patient.lastname);
                    $("#personNumber").val(patient.personnumber);
                    $("#phoneNumber").val(patient.phonenumber);
                    $("#adress").val(patient.adress);
                    $("#zipCode").val(patient.zipcode);
                    $(".create-save-btn").attr("value", "Save/Create");
                });



                /* Delete recod */
                $("#myTable").on("click", ".deleteButton", function () {
                    var removeButton = $(this);
                    var collapsedTr = removeButton.closest('tr');
                    var partedTr = collapsedTr.prev('tr.parent');

                    // Remove collapsed tr
                    collapsedTr.remove();
                    partedTr.remove();

                    var patientId = $(this).data('id');
                

                    $.ajax({
                        type: "post",
                        url: "@Url.Action("DeletePatient", "Patient")",
                        ajaxasync: true,
                    data: { id: patientId },

                    success: function () {
                        alert("success");
                    },
                    error: function (data) {
                        alert(data.x);
                    }
                });
               });

                /* Delete recod END*/











                /*


                var table = $("#patientTable")
                    .DataTable({
                        responsive: true,
                        "language": {
                            "lengthMenu": "Visar _MENU_ personer per sida",
                            "zeroRecords": "Vi hittade tyvärr inget",
                            "info": "Visar _PAGE_ av _PAGES_",
                            "infoEmpty": "Inga uppgifter tillgängliga",
                            "infoFiltered": "(filtered from _MAX_ total records)",
                            "search": "Sök",
                            "paginate": {
                                "first": "Första",
                                "last": "Sista",
                                "next": "Nästa",
                                "previous": "Föregående"
                            },
                            "processing": "Söker...",
                        },



                        ajax: {
                                url: "/Patient/GetPatients",
                                type: "GET",
                                "dataType": "json"
                            },
                            columns: [
                            { data: "Id" },
                            { data: "FirstName" },
                            { data: "LastName" },
                            { data: "PersonNumber" },
                            { data: "PhoneNumber" },
                            { data: "Adress" },
                            { data: "ZipCode" },
                            { data: "Id",
                                render: function (data) {
                                    return "<button class='btn btn-danger js-delete' data-patient-id=" + data + ">Delete</button>" +
                                          + " " + "<button class='btn btn-info js-edit' data-patient-id=" + data + ">Edit</button>";;
                                }
                            }
                ]
               });


                */




















                
             




        });







 



    </script>
}



<!--




                $("#patientTable").on("click", ".deleteButton", function () {
                    var removeButton = $(this);

                    // Get ref to  collapsed tr and colapsed tr to get remove when success
                    var collapsedTr = removeButton.closest('tr');
                    var partedTr = collapsedTr.prev('tr.parent');

                
                     var patientId = $(this).data('patient-id');

                            $.ajax({
                                url: "@Url.Action("DeletePatient", "Patient")",
                                method: "POST",
                                data: { id: patientId },
                                success: function () {
                                    collapsedTr.remove();
                                    partedTr.remove();
                                }
                            });
                });


-->