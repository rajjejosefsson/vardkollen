//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CareCheck.MVC.Admin.EmployeesWebservice {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeesWebservice.IEmployeesWebservice")]
    public interface IEmployeesWebservice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeesWebservice/EmployeeById", ReplyAction="http://tempuri.org/IEmployeesWebservice/EmployeeByIdResponse")]
        CareCheck.DomainClasses.Employee EmployeeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeesWebservice/EmployeeById", ReplyAction="http://tempuri.org/IEmployeesWebservice/EmployeeByIdResponse")]
        System.Threading.Tasks.Task<CareCheck.DomainClasses.Employee> EmployeeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeesWebservice/EmployeeSchedule", ReplyAction="http://tempuri.org/IEmployeesWebservice/EmployeeScheduleResponse")]
        CareCheck.DomainClasses.Schedule[] EmployeeSchedule(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeesWebservice/EmployeeSchedule", ReplyAction="http://tempuri.org/IEmployeesWebservice/EmployeeScheduleResponse")]
        System.Threading.Tasks.Task<CareCheck.DomainClasses.Schedule[]> EmployeeScheduleAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeesWebservice/UpdateTodoList", ReplyAction="http://tempuri.org/IEmployeesWebservice/UpdateTodoListResponse")]
        void UpdateTodoList(int scheduleId, bool[] checkBoxes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeesWebservice/UpdateTodoList", ReplyAction="http://tempuri.org/IEmployeesWebservice/UpdateTodoListResponse")]
        System.Threading.Tasks.Task UpdateTodoListAsync(int scheduleId, bool[] checkBoxes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeesWebservice/PatientScheduleById", ReplyAction="http://tempuri.org/IEmployeesWebservice/PatientScheduleByIdResponse")]
        CareCheck.DomainClasses.Schedule PatientScheduleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeesWebservice/PatientScheduleById", ReplyAction="http://tempuri.org/IEmployeesWebservice/PatientScheduleByIdResponse")]
        System.Threading.Tasks.Task<CareCheck.DomainClasses.Schedule> PatientScheduleByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeesWebserviceChannel : CareCheck.MVC.Admin.EmployeesWebservice.IEmployeesWebservice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeesWebserviceClient : System.ServiceModel.ClientBase<CareCheck.MVC.Admin.EmployeesWebservice.IEmployeesWebservice>, CareCheck.MVC.Admin.EmployeesWebservice.IEmployeesWebservice {
        
        public EmployeesWebserviceClient() {
        }
        
        public EmployeesWebserviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeesWebserviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeesWebserviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeesWebserviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CareCheck.DomainClasses.Employee EmployeeById(int id) {
            return base.Channel.EmployeeById(id);
        }
        
        public System.Threading.Tasks.Task<CareCheck.DomainClasses.Employee> EmployeeByIdAsync(int id) {
            return base.Channel.EmployeeByIdAsync(id);
        }
        
        public CareCheck.DomainClasses.Schedule[] EmployeeSchedule(int employeeId) {
            return base.Channel.EmployeeSchedule(employeeId);
        }
        
        public System.Threading.Tasks.Task<CareCheck.DomainClasses.Schedule[]> EmployeeScheduleAsync(int employeeId) {
            return base.Channel.EmployeeScheduleAsync(employeeId);
        }
        
        public void UpdateTodoList(int scheduleId, bool[] checkBoxes) {
            base.Channel.UpdateTodoList(scheduleId, checkBoxes);
        }
        
        public System.Threading.Tasks.Task UpdateTodoListAsync(int scheduleId, bool[] checkBoxes) {
            return base.Channel.UpdateTodoListAsync(scheduleId, checkBoxes);
        }
        
        public CareCheck.DomainClasses.Schedule PatientScheduleById(int id) {
            return base.Channel.PatientScheduleById(id);
        }
        
        public System.Threading.Tasks.Task<CareCheck.DomainClasses.Schedule> PatientScheduleByIdAsync(int id) {
            return base.Channel.PatientScheduleByIdAsync(id);
        }
    }
}
